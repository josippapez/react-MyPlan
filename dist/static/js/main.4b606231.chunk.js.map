{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/authentication/SignIn.js","components/authentication/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","isNotAuthenticated","firebase","isEmpty","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","uid","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","status","onSubmit","htmlFor","onChange","creds","userData","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","authError","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","firstName","lastName","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","favourites","message","projectReducer","console","log","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b606231.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nfunction SignedInLinks(props){\r\n    return(\r\n        <ul className=\"right\">    \r\n            <li><NavLink to='/createproject'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating dark lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signOut:()=>dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (userData) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(userData.email, userData.password)\r\n        .then(() => {\r\n          dispatch({ type: \"LOGIN_SUCCESS\" });\r\n        })\r\n        .catch(err => {\r\n          dispatch({ type: \"LOGIN_ERROR\", err });\r\n        });\r\n    };\r\n  };\r\n\r\n  export const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n      firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n        });\r\n    };\r\n  };\r\n\r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n        .then(response => {\r\n          return firestore\r\n            .collection(\"users\")\r\n            .doc(response.user.uid)\r\n            .set({\r\n              firstName: newUser.firstName,\r\n              lastName: newUser.lastName,\r\n              initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        })\r\n        .then(() => dispatch({ type: \"SIGNUP_SUCCSESS\" }))\r\n        .catch(err => dispatch({ type: \"SIGNUP_ERROR\", err }));\r\n    };\r\n  };","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nfunction SignedOutLinks(){\r\n    return(\r\n        <ul className=\"right\">    \r\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nfunction Navbar(props){\r\n    const {isNotAuthenticated, profile} = props;\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MyPlan</Link>\r\n                { isNotAuthenticated ? <SignedOutLinks /> : <SignedInLinks profile={profile}/>  }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        isNotAuthenticated: state.firebase.auth.isEmpty,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction Notifications(props){\r\n    const {notifications}= props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notification=>{\r\n                            return(\r\n                                <li key={notification.id}>\r\n                                    <span className=\"orange-text\">{notification.user} </span>\r\n                                    <span>{notification.content}</span>\r\n                                    <div className=\"grey-text notification-date\">\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction ProjectSummary({project}){\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom'\r\nfunction ProjectList({projects}){\r\n    return (\r\n        <div className=\"project-list section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Projects</span>\r\n                </div>\r\n            </div>\r\n            {projects && projects.map(project=>{\r\n                return (\r\n                    <Link to={'/project/'+ project.id} key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React,{Component} from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {projects, auth, notifications}=this.props;\r\n        if (!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        projects:state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps),\r\nfirestoreConnect([\r\n    {collection: 'projects',orderBy: ['createdAt','desc']},\r\n    {collection: 'notifications', limit: 4, orderBy: ['time','desc']}\r\n])\r\n)(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ProjectDetails(props) {\r\n    const {project,auth}=props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>{project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        ) \r\n    }  \r\n}\r\nconst mapStateToProps=(state,ownProps)=>{\r\n    const id=ownProps.match.params.id;\r\n    const projects=state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return{\r\n        project:project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection:'projects'\r\n    }])\r\n    )(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport {connect}from 'react-redux';\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {status,auth}=this.props;\r\n        if (auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign in</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {status ?  <p>{status}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signIn:(creds)=> dispatch(signIn(creds))\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        status:state.auth.status,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstname:'',\r\n        lastname:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const {auth, authError}=this.props;\r\n        if (auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signUp:(creds) =>dispatch(signUp(creds))\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.status\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","export const createProject=(project)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        //making async call to db\r\n        const firestore=getFirestore();\r\n        const profile= getState().firebase.profile;\r\n        const authorId= getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR',err});\r\n    })\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        createProject: (project)=>dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/authentication/SignIn';\r\nimport SignUp from './components/authentication/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <Switch>\r\n          <Route exact path='/' component={Dashboard}/>\r\n          <Route path='/project/:id' component={ProjectDetails}/>\r\n          <Route path='/signin' component={SignIn}/>\r\n          <Route path='/signup' component={SignUp}/>\r\n          <Route path='/createproject' component={CreateProject}/>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\r\n    status: null\r\n};\r\nconst authReducer =(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case \"LOGIN_SUCCESS\":\r\n          return { ...state, status: null };\r\n        case \"LOGIN_ERROR\":\r\n          return { ...state, status: \"Login failed\" };\r\n        case \"SIGNOUT_SUCCESS\":\r\n          return { ...state, status: null, favourites: [] };\r\n        case \"SIGNUP_SUCCESS\":\r\n          return { ...state, status: null };\r\n        case \"SIGNUP_ERROR\":\r\n          return { ...state, status: action.err.message };\r\n        default:\r\n          return state;\r\n      }\r\n}\r\nexport default authReducer;","const initState={\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n};\r\nconst projectReducer =(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBWtvTojt7bz_omhMfGajGNjIOiY4QmNr0\",\r\n  authDomain: \"jpapez-myplan.firebaseapp.com\",\r\n  databaseURL: \"https://jpapez-myplan.firebaseio.com\",\r\n  projectId: \"jpapez-myplan\",\r\n  storageBucket: \"jpapez-myplan.appspot.com\",\r\n  messagingSenderId: \"270279557307\",\r\n  appId: \"1:270279557307:web:583aca62eaaf4ed3d3a99e\",\r\n  measurementId: \"G-WKRFCGNH3Q\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore,applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./config/fbConfig\";\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n      reduxFirestore(fbConfig),\r\n      reactReduxFirebase(fbConfig, { userProfile: 'users',useFirestoreForProfile: true ,attachAuthIsReady: true })\r\n    )\r\n  );\r\n\r\n  store.firebaseAuthIsReady.then(() => {\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'))\r\n  });\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}